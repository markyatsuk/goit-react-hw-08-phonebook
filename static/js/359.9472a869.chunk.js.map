{"version":3,"file":"static/js/359.9472a869.chunk.js","mappings":"iNACA,EAA8B,+BAA9B,EAAsE,0BAAtE,EAA+G,gCAA/G,EAA6L,8BAA7L,EAAwO,8BAAxO,EAAuR,kC,6BCGxQ,SAASA,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MACjB,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAgCF,EAAAA,EAAAA,UAAS,IAAzC,eAAOG,EAAP,KAAiBC,EAAjB,KACA,SAASC,EAAT,GAAoD,IAAD,IAA3BC,OAAUC,EAAiB,EAAjBA,KAAMC,EAAW,EAAXA,MACtC,OAAQD,GACN,IAAK,QACH,OAAOL,EAASM,GAClB,IAAK,WACH,OAAOJ,EAAYI,GACrB,QACE,OAEL,CAaD,OACE,iBAAKC,UAAWC,EAAhB,WACE,eAAID,UAAWC,EAAf,oBACA,kBAAMD,UAAWC,EAAcC,GAAG,cAAcC,SAfpD,SAAsBC,GACpBA,EAAEC,iBACFhB,EAASiB,EAAAA,EAAAA,MAAqB,CAAEd,MAAAA,EAAOE,SAAAA,KACvCD,EAAS,IACTE,EAAY,IACZS,EAAEP,OAAOU,OACV,EASG,WACE,iBAAKP,UAAWC,EAAhB,WACE,kBACED,UAAWC,EACXO,KAAK,QACLV,KAAK,QACLW,aAAa,MACbC,YAAY,oCACZC,SAAUf,KAEZ,kBACEI,UAAWC,EACXO,KAAK,WACLV,KAAK,WACLW,aAAa,MACbC,YAAY,kBACZC,SAAUf,QAGd,mBAAQY,KAAK,SAASR,UAAWC,EAAUW,SA1B9B,WACjB,GAAqB,KAAjBpB,EAAMqB,QAAqC,KAApBnB,EAASmB,OAAe,OAAO,CAC3D,CAwB0DC,GAArD,wBAMP,C","sources":["webpack://goit-react-hw-08-phonebook/./src/views/LoginView/LoginView.module.css?c53e","views/LoginView/LoginView.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form__input\":\"LoginView_form__input__gtuJx\",\"button\":\"LoginView_button__D3Hb2\",\"authContiner\":\"LoginView_authContiner__4Pi2R\",\"title\":\"LoginView_title__-V63X\",\"afterTitle\":\"LoginView_afterTitle__H6yit\",\"searchForm\":\"LoginView_searchForm__ZdGlT\",\"inputContainer\":\"LoginView_inputContainer__JD2bU\"};","import { useState } from \"react\";\nimport s from \"./LoginView.module.css\";\nimport { useDispatch } from \"react-redux\";\nimport authOperations from \"../../redux/auth/authOperations\";\nexport default function LoginView() {\n  const dispatch = useDispatch();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  function handleChange({ target: { name, value } }) {\n    switch (name) {\n      case \"email\":\n        return setEmail(value);\n      case \"password\":\n        return setPassword(value);\n      default:\n        return;\n    }\n  }\n  function handleSubmit(e) {\n    e.preventDefault();\n    dispatch(authOperations.logIn({ email, password }));\n    setEmail(\"\");\n    setPassword(\"\");\n    e.target.reset();\n  }\n\n  const isDisabled = () => {\n    if (email.trim() === \"\" || password.trim() === \"\") return true;\n  };\n\n  return (\n    <div className={s.authContiner}>\n      <h1 className={s.afterTitle}>Login</h1>\n      <form className={s.searchForm} id=\"search-form\" onSubmit={handleSubmit}>\n        <div className={s.inputContainer}>\n          <input\n            className={s.form__input}\n            type=\"email\"\n            name=\"email\"\n            autoComplete=\"off\"\n            placeholder=\"ex: benedictcumberbatch@gmail.com\"\n            onChange={handleChange}\n          />\n          <input\n            className={s.form__input}\n            type=\"password\"\n            name=\"password\"\n            autoComplete=\"off\"\n            placeholder=\"examplepassword\"\n            onChange={handleChange}\n          />\n        </div>\n        <button type=\"submit\" className={s.button} disabled={isDisabled()}>\n          Login\n        </button>\n      </form>\n    </div>\n  );\n}\n"],"names":["LoginView","dispatch","useDispatch","useState","email","setEmail","password","setPassword","handleChange","target","name","value","className","s","id","onSubmit","e","preventDefault","authOperations","reset","type","autoComplete","placeholder","onChange","disabled","trim","isDisabled"],"sourceRoot":""}