{"version":3,"file":"static/js/695.f29aa12e.chunk.js","mappings":"kNACA,EAA8B,kCAA9B,EAAyE,6BAAzE,EAAqH,mCAArH,EAAqK,iCAArK,EAAuP,iCAAvP,EAAyS,qC,6BCG1R,SAASA,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MACjB,GAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAgCJ,EAAAA,EAAAA,UAAS,IAAzC,eAAOK,EAAP,KAAiBC,EAAjB,KAEA,SAASC,EAAT,GAAoD,IAAD,IAA3BC,OAAUP,EAAiB,EAAjBA,KAAMQ,EAAW,EAAXA,MACtC,OAAQR,GACN,IAAK,OACH,OAAOC,EAAQO,GACjB,IAAK,QACH,OAAOL,EAASK,GAClB,IAAK,WACH,OAAOH,EAAYG,GACrB,QACE,OAEL,CAgBD,OACE,iBAAKC,UAAWC,EAAhB,WACE,eAAID,UAAWC,EAAf,2BACA,kBAAMD,UAAWC,EAAcC,GAAG,cAAcC,SAjBpD,SAAsBC,GACpBA,EAAEC,iBACFjB,EAASkB,EAAAA,EAAAA,SAAwB,CAAEf,KAAAA,EAAME,MAAAA,EAAOE,SAAAA,KAChDH,EAAQ,IACRE,EAAS,IACTE,EAAY,IACZQ,EAAEN,OAAOS,OACV,EAUG,WACE,iBAAKP,UAAWC,EAAhB,WACE,kBACED,UAAWC,EACXO,KAAK,OACLjB,KAAK,OACLkB,aAAa,MACbC,YAAY,2BACZC,SAAUd,KAEZ,kBACEG,UAAWC,EACXO,KAAK,QACLjB,KAAK,QACLkB,aAAa,MACbC,YAAY,oCACZC,SAAUd,KAEZ,kBACEG,UAAWC,EACXO,KAAK,WACLjB,KAAK,WACLkB,aAAa,MACbC,YAAY,kBACZC,SAAUd,QAGd,mBAAQW,KAAK,SAASR,UAAWC,EAAUW,SAnC9B,WACjB,GAAqB,KAAjBnB,EAAMoB,QAAqC,KAApBlB,EAASkB,QAAiC,KAAhBtB,EAAKsB,OACxD,OAAO,CACV,CAgC0DC,GAArD,2BAMP,C","sources":["webpack://goit-react-hw-08-phonebook/./src/views/RegisterView/RegisterView.module.css?6d4e","views/RegisterView/RegisterView.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form__input\":\"RegisterView_form__input__U+i5v\",\"button\":\"RegisterView_button__h1DAX\",\"authContiner\":\"RegisterView_authContiner__cm4ID\",\"searchForm\":\"RegisterView_searchForm__IArgQ\",\"title\":\"RegisterView_title__4fcRB\",\"afterTitle\":\"RegisterView_afterTitle__ney7o\",\"inputContainer\":\"RegisterView_inputContainer__6ZCFO\"};","import { useState } from \"react\";\nimport s from \"./RegisterView.module.css\";\nimport { useDispatch } from \"react-redux\";\nimport authOperations from \"../../redux/auth/authOperations\";\nexport default function RegisterView() {\n  const dispatch = useDispatch();\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  function handleChange({ target: { name, value } }) {\n    switch (name) {\n      case \"name\":\n        return setName(value);\n      case \"email\":\n        return setEmail(value);\n      case \"password\":\n        return setPassword(value);\n      default:\n        return;\n    }\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    dispatch(authOperations.register({ name, email, password }));\n    setName(\"\");\n    setEmail(\"\");\n    setPassword(\"\");\n    e.target.reset();\n  }\n\n  const isDisabled = () => {\n    if (email.trim() === \"\" || password.trim() === \"\" || name.trim() === \"\")\n      return true;\n  };\n\n  return (\n    <div className={s.authContiner}>\n      <h1 className={s.afterTitle}>Registration</h1>\n      <form className={s.searchForm} id=\"search-form\" onSubmit={handleSubmit}>\n        <div className={s.inputContainer}>\n          <input\n            className={s.form__input}\n            type=\"text\"\n            name=\"name\"\n            autoComplete=\"off\"\n            placeholder=\"ex: Benedict Cumberbatch\"\n            onChange={handleChange}\n          />\n          <input\n            className={s.form__input}\n            type=\"email\"\n            name=\"email\"\n            autoComplete=\"off\"\n            placeholder=\"ex: benedictcumberbatch@gmail.com\"\n            onChange={handleChange}\n          />\n          <input\n            className={s.form__input}\n            type=\"password\"\n            name=\"password\"\n            autoComplete=\"off\"\n            placeholder=\"examplepassword\"\n            onChange={handleChange}\n          />\n        </div>\n        <button type=\"submit\" className={s.button} disabled={isDisabled()}>\n          Register\n        </button>\n      </form>\n    </div>\n  );\n}\n"],"names":["RegisterView","dispatch","useDispatch","useState","name","setName","email","setEmail","password","setPassword","handleChange","target","value","className","s","id","onSubmit","e","preventDefault","authOperations","reset","type","autoComplete","placeholder","onChange","disabled","trim","isDisabled"],"sourceRoot":""}